# Database connection type (note: only "sqlite3" is supported at the moment)
db_type = "sqlite3"
# Database connection settings; see https://gorm.io/docs/connecting_to_the_database.html#Supported-Databases for details
db_connection = "/tmp/freifunkmanager.db"

# Address and port where HTTP server shall listen
webserver_bind = ":8080"
# Root directory to serve via HTTP
webroot = "./webroot/"

# Password required for making changes in the web interface
secret = "passw0rd"

# How long should a node remain on the blacklist after it has not responded to an SSH connection
# (nodes are blacklisted if they have sent updated respondd data but are not reachable by SSH)
blacklist_for = "1w"

# SSH key for logging in on nodes
ssh_key = "~/.ssh/id_rsa"
# Only IP addresses starting with this prefix are used for SSH connection
ssh_ipaddress_prefix = "fd2f:"
# Timeout for SSH connections
ssh_timeout = "1m"

# If true, built-in Yanic instance will be used to request and collect respondd data from nodes
yanic_enable = true
# If set, Yanic startup will be delayed until the next full minute (or hour or whatever is configured here)
# yanic_synchronize = "1m"
# How often shall Yanic send respondd requests
yanic_collect_interval = "10s"

# More settings for the built-in Yanic instance
[yanic]
# Interface on which Yanic will send out respondd requests
ifname = "wlp4s0"
# e.g. to receive data of real yanic
#  - please also disable `yanic_collect_interval`
# ifname = "lo"

# If set, Yanic will listen for response packets on this address only.
# ip_address = "::1"

# multicast address where respondd requests shall be sent. Default: ff05::2:1001
# multicast_address = "ff05::2:1001"

# If true, Yanic will not send own respondd request packets but will still listen for response packets
# send_no_request = true

# Local UDP port where Yanic will listen for response packets. Default: a dynamically selected port
# (note: request packets to nodes will always be sent to port 1001, regardless of this setting)
# port = 1001


# nodes will pinged periodically
[pinger]
# if true, nodes will pinged periodically. default: false
enable  = true
every   = "1s"
timeout = "1s"
count   = 1